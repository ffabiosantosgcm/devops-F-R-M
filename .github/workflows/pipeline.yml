name: devops-pipeline-F-R-M

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:            
      - name: executa comando
        run: echo "Configuração inicial do pipeline" 

  build1:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2   
    - uses: actions/upload-artifact@v2
      with:
        name: deploy AWS s3
        path: README.md

  deploy-dev:
   runs-on: ubuntu-latest
   environment:
    name: dev
    url: 'https://www.pucminas.br/destaques/Paginas/default.aspx'
   needs: build 
   steps:
    - name: Run a one-line script
      run: echo Deploy Dev
  
  deploy-prod:
   runs-on: ubuntu-latest
   environment: 
     name: prod
     url: 'https://www.pucminas.br/destaques/Paginas/default.aspx'
   needs: deploy-dev
   steps:
    - name: Run a one-line script
      run: echo Deploy Prod

  deploy-aws-s3:
    runs-on: ubuntu-latest
    needs: build1
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_EC2_METADATA_DISABLED: true
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: deploy AWS s3
        path: README2.md
    - run: aws s3 cp README2.md s3://devops-frm --recursive --acl public-read

  deploy-aws-vpc:
    runs-on: ubuntu-latest
    needs: build
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_EC2_METADATA_DISABLED: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Configurando Python
        run: |
          python3 -m venv py3
          source py3/bin/activate
          python -m pip install --upgrade pip
          pip install boto3 botocore ansible==2.10
          echo "ANSIBLE_PYTHON_INTERPRETER=$VIRTUAL_ENV/bin/python3" >> $GITHUB_ENV
          echo "ENVIRONMENT_SETUP=true" >> $GITHUB_ENV
      - name: Testando Ansible
        run: |
          source py3/bin/activate
          ansible-playbook -vvvv ansible/ping.yml
      - uses: actions/download-artifact@v3
